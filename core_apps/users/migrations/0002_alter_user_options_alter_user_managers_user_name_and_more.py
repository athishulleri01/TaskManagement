# Generated by Django 5.2 on 2025-05-01 12:16

import core_apps.users.managers
import core_apps.users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="user",
            options={
                "ordering": ["-date_joined"],
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
        ),
        migrations.AlterModelManagers(
            name="user",
            managers=[
                ("objects", core_apps.users.managers.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="name",
            field=models.CharField(default=2, max_length=120, verbose_name="Full Name"),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="username",
            field=models.CharField(
                max_length=60,
                unique=True,
                validators=[core_apps.users.models.UsernameValidator()],
                verbose_name="Username",
            ),
        ),
    ]
